version: "3.5"

volumes:
  redis_data:

services:
  minio:
    image: minio/minio
    container_name: image-resize-minio # boto does not support underscores in host names
    ports:
      - "9000:9000"
      - "9090:9090" # terminal
    environment:
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    volumes:
      - ./minio/data:/data
    command: [ "server", "--console-address", ":9090", "--address", ":9000", "/data" ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  mc:
    image: minio/mc
    container_name: image-resize-mc
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://image-resize-minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api S3v4;
      mc admin trace myminio --verbose;
      "
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: image-resize-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: [ 'redis-server', '--appendonly', 'yes' ]
    volumes:
      - redis_data:/data

        #  postgres:
        #    image: postgres
        #    restart: unless-stopped
        #    container_name: postgres_dev
        #    ports:
        #      - "5432:5432"
        #    env_file:
        #      - .env.dev.postgres
        #    volumes:
        #      - ./postgres-init-db.sh:/docker-entrypoint-initdb.d/postgres-init-db.sh
        #      - ./postgres_data_dev/:/var/lib/postgresql/data


      # TODO containerise celery worker and main app

#      web:
#        build: ./project
#        ports:
#          - 8004:8000
#        command: uvicorn main:app --host 0.0.0.0 --reload
#        volumes:
#          - ./project:/usr/src/app
#        environment:
#          - CELERY_BROKER_URL=redis://redis:6379/0
#          - CELERY_RESULT_BACKEND=redis://redis:6379/0
#        depends_on:
#          - redis
#
#      worker:
#        build: ./project
#        command: celery -A worker.celery worker --loglevel=info
#        volumes:
#          - ./project:/usr/src/app
#        environment:
#          - CELERY_BROKER_URL=redis://redis:6379/0
#          - CELERY_RESULT_BACKEND=redis://redis:6379/0
#        depends_on:
#          - web
#          - redis







